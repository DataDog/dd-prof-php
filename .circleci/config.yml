version: 2.1

jobs:

  build:
    docker:
      - image: cimg/base:2022.02
    steps:
      - checkout

      - run:
          name: Add OS packages
          command: |
            set -euo pipefail
            sudo apt-get update
            sudo apt-get install -y php7.4-dev libuv1-dev

      - run:
          name: Add /opt packages
          command: |
            set -euo pipefail
            user=$(whoami)
            curl -OL https://github.com/DataDog/libddprof/releases/download/v0.6.0/libddprof-x86_64-unknown-linux-gnu.tar.gz
            sha256sum="8eaec92d14bcfa8839843ba2ddfeae254804e087a4984985132a508d6f841645"
            echo "$sha256sum  libddprof-x86_64-unknown-linux-gnu.tar.gz" | sha256sum -c
            export DDProf_ROOT="/opt/libddprof"
            sudo mkdir -p "$DDProf_ROOT"
            sudo chown "$user" "$DDProf_ROOT"
            tar -x --strip-components 1 \
              -f libddprof-x86_64-unknown-linux-gnu.tar.gz \
              -C "$DDProf_ROOT"
            curl -OL https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-x86_64.tar.gz
            sha256sum="73565c72355c6652e9db149249af36bcab44d9d478c5546fd926e69ad6b43640"
            echo "$sha256sum  cmake-3.22.1-linux-x86_64.tar.gz"
            sudo mkdir -p /opt/cmake
            sudo chown $user /opt/cmake
            tar -x --strip-components 1 \
              -f cmake-3.22.1-linux-x86_64.tar.gz \
              -C /opt/cmake
            curl -OL https://github.com/catchorg/Catch2/archive/refs/tags/v2.13.8.tar.gz
            sha256sum="b9b592bd743c09f13ee4bf35fc30eeee2748963184f6bea836b146e6cc2a585a"
            echo "$sha256sum  v2.13.8.tar.gz"
            mkdir -vp /tmp/catch2-src /tmp/catch2-build
            sudo mkdir -vp /opt/catch2
            sudo chown $user /opt/catch2
            tar -x --strip-components 1 \
              -f v2.13.8.tar.gz \
              -C /tmp/catch2-src
            cmake -S /tmp/catch2-src -B /tmp/catch2-build \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=/opt/catch2 \
              -DBUILD_SHARED_LIBS=on \
              -DCMAKE_POSITION_INDEPENDENT_CODE=on \
              -DCATCH_INSTALL_DOCS=off \
              -DCATCH_BUILD_TESTING=off \
              -DCATCH_BUILD_STATIC_LIBRARY=on
            cmake --build /tmp/catch2-build --parallel $(nproc)
            cmake --install /tmp/catch2-build

      - run:
          name: Build datadog-profiling and run tests
          command: |
            set -euo pipefail
            export DDProf_ROOT="/opt/libddprof"
            export Catch2_ROOT="/opt/catch2"
            export PATH="/opt/cmake/bin:$PATH"
            cmake -S . -B cmake-build-release \
              -DCMAKE_BUILD_TYPE=Release \
              -DDATADOG_PHP_TESTING=on
            cmake --build cmake-build-release
            cd cmake-build-release
            ctest --output-on-failure

      - run:
          name: Install datadog-profiling
          command: |
            set -euo pipefail
            extension_dir="$(php-config --extension-dir)"
            sudo mkdir -vp "$extension_dir"
            sudo cp -v cmake-build-release/datadog-profiling.so "$extension_dir"
            ini_dir="$(php-config --ini-dir)"
            sudo mkdir -vp "$ini_dir"
            echo "zend_extension=datadog-profiling.so" > datadog-profiling.ini
            sudo cp -v datadog-profiling.ini "$ini_dir/"

      - run:
          name: Run php --ri diagnostics
          command: |
            # This should "fail" with a success error code with a message
            # containing something like:
            # [Datadog Profiling] Failed to upload profile
            # It should NOT have non-zero exit code.
            DD_PROFILING_ENABLED=yes php --ri datadog-profiling

  nightly:
    docker:
      - image: cimg/base:2022.02
    steps:
      - checkout
      - run: bash .circleci/nightly.sh /tmp
      - store_artifacts:
          path: /tmp/datadog-profiling.tar.gz
          destination: datadog-profiling.tar.gz

workflows:
  version: 2

  commit:
    when:
      not:
        equal: [ "nightly", << pipeline.schedule.name >> ]
    jobs:
      - build

  nightly:
    when:
      equal: [ "nightly", << pipeline.schedule.name >> ]
    jobs:
      - nightly
